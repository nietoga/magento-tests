<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="mts" translate="label" sortOrder="200">
            <label>MTS</label>
        </tab>

        <section id="mts" translate="label" type="text" sortOrder="10"
                 showInDefault="1" showInWebsite="1" showInStore="1">
            <label>MTS</label>
            <tab>mts</tab>

            <!-- Just reuse a previously created resource -->
            <resource>Magento_Config::web</resource>

            <group id="configs_demo" translate="label" type="text" sortOrder="50"
                   showInDefault="1" showInWebsite="1" showInStore="1">
                <label>Configs Demo</label>

                <field id="my_boolean" translate="label" type="select" sortOrder="40"
                       showInDefault="1" showInWebsite="1" showInStore="1" canRestore="1">
                    <label>My Boolean</label>
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                    <validate>required-entry</validate>
                </field>

                <field id="my_integer" translate="label" type="text" sortOrder="60"
                       showInDefault="1" showInWebsite="1" showInStore="1" canRestore="1">
                    <label>My Integer</label>
                    <depends>
                        <field id="my_boolean">1</field>
                    </depends>
                    <validate>required-entry validate-number</validate>
                </field>

                <field id="my_select" translate="label" type="select" sortOrder="70"
                       showInDefault="1" showInWebsite="1" showInStore="1" canRestore="1">
                    <label>My Select</label>
                    <source_model>Mts\ConfigsDemo\Model\Config\Source\MySelect</source_model>
                </field>

                <field id="my_string" translate="label" type="text" sortOrder="80"
                       showInDefault="1" showInWebsite="1" showInStore="1" canRestore="1">
                    <label>My String</label>
                    <validate>required-entry</validate>
                </field>

                <field id="my_table" translate="label" sortOrder="100"
                       showInDefault="1" showInWebsite="1" showInStore="1" canRestore="1">
                    <label>My Table</label>
                    <frontend_model>Mts\ConfigsDemo\Block\Adminhtml\Form\Field\MyTableRow</frontend_model>
                    <backend_model>Magento\Config\Model\Config\Backend\Serialized\ArraySerialized</backend_model>
                </field>

                <field id="my_password" translate="label" type="obscure" sortOrder="110"
                       showInDefault="1" showInWebsite="1" showInStore="1">
                    <label>My Password</label>
                    <backend_model>Magento\Config\Model\Config\Backend\Encrypted</backend_model>
                </field>

                <!--
                    Missing examples:
                    * Images
                    * Emails (just strings with validations)
                    * Sometimes arrays are represented by csv instead
                    * Multiselects
                    * How to customize tables with css, etc.

                    Consider the following:
                    * We have 2 parts: frontend and backend handling. It's done with:
                        * source_model
                        * frontend_model
                        * backend_model

                    We can also add validations. See "validate-emails" for example.
                    Validations are mostly not required, since we are expecting customers to use the modules correctly.
                -->
            </group>
        </section>
    </system>
</config>
